generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRoles {
  USER  @map("user")
  ADMIN @map("admin")

  @@map("user_roles")
}

enum OrderStatus {
  PENDING @map("pending")
  PAID    @map("paid")

  @@map("order_status")
}

model User {
  id       String      @id @default(uuid())
  fullname String
  email    String      @unique
  password String
  address  String
  roles    UserRoles[]
  cart     Cart?
  orders   Order[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id          String      @id @default(uuid())
  name        String      @unique
  description String
  price       Float
  stock       Int
  imageUrl    String      @map("image_url")
  imageId     String      @map("image_id")
  categoryId  String      @map("category_id")
  category    Category    @relation(fields: [categoryId], references: [id])
  cartItems   CartItem[]
  orderItems  OrderItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("products")
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  products    Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

model Cart {
  id     String     @id @default(uuid())
  userId String     @unique @map("user_id")
  user   User       @relation(fields: [userId], references: [id])
  total  Float
  items  CartItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("carts")
}

model Order {
  id     String      @id @default(uuid())
  userId String      @map("user_id")
  user   User        @relation(fields: [userId], references: [id])
  total  Float
  status OrderStatus @default(PENDING)
  items  OrderItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("orders")
}

model CartItem {
  id        String  @id @default(uuid())
  cartId    String  @map("cart_id")
  productId String  @map("product_id")
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  subtotal  Float

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([cartId, productId])
  @@map("cart_items")
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String  @map("order_id")
  productId String  @map("product_id")
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  subtotal  Float

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@unique([orderId, productId])
  @@map("order_items")
}
